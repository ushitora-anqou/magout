# Default values for magout.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: ""

serverName: "" # CHANGE HERE

mastodonVersion:
  image: ghcr.io/mastodon/mastodon:v4.2.12
  streamingImage: ghcr.io/mastodon/mastodon:v4.2.12

mastodonServer:
  sidekiq:
    replicas: 1
    labels: {}
    annotations: {}
    env: []
    envFrom: [] # CHANGE HERE
    resources: {}
    periodicRestart: {}
    # periodicRestart:
    #   schedule: "0 0 * * *"
    #   timeZone: UTC
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 991
      runAsGroup: 991
      seccompProfile:
        type: RuntimeDefault
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
    volumeMounts: []
    volumes: []
  web:
    replicas: 1
    labels: {}
    annotations: {}
    env: []
    envFrom: [] # CHANGE HERE
    resources: {}
    periodicRestart: {}
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 991
      runAsGroup: 991
      seccompProfile:
        type: RuntimeDefault
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
    volumeMounts: []
    volumes: []
  streaming:
    replicas: 1
    labels: {}
    annotations: {}
    env: []
    envFrom: [] # CHANGE HERE
    resources: {}
    periodicRestart: {}
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 991
      runAsGroup: 991
      seccompProfile:
        type: RuntimeDefault
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
    volumeMounts: []
    volumes: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

operator:
  replicaCount: 1

  image:
    repository: ghcr.io/ushitora-anqou/magout
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []
  nameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65532
    runAsGroup: 65532
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ports:
    - name: probe
      containerPort: 8081
      protocol: TCP

  livenessProbe:
    httpGet:
      path: /healthz
      port: probe
  readinessProbe:
    httpGet:
      path: /readyz
      port: probe

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

gateway:
  enabled: true
  deploy:
    replicas: 1
    image: nginxinc/nginx-unprivileged:1
    resources: {}
    annotations: {}
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 101
      runAsGroup: 101
      seccompProfile:
        type: RuntimeDefault
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
  service:
    type: ClusterIP
    port: 8080

ingress:
  enabled: false
  annotations: {}
  ingressClassName: ""
  tls:
    enabled: false

periodicMaintenance:
  enabled: false
  schedule: "0 0 * * *"
  timeZone: "UTC"
  successfulJobsHistoryLimit: 1
  env: []
  envFrom: []
  resources: {}
  removeStatuses: # tootctl statuses remove
    enabled: false
  pruneAccounts: # tootctl accounts prune
    enabled: true
  cullAccounts: # tootctl accounts cull
    enabled: true
  removeMedia: # tootctl media remove
    enabled: true
  pruneProfileMedia: # tootctl media remove --prune-profiles
    enabled: false
  removeOrphanMedia: # tootctl media remove-orphans
    enabled: false
  refreshAccounts: # tootctl accounts refresh --all
    enabled: false
  removePreviewCards: # tootctl preview_cards remove
    enabled: false
